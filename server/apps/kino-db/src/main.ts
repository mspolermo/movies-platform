import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { MicroserviceOptions, Transport } from '@nestjs/microservices';

async function bootstrap() {
  // –°–æ–∑–¥–∞–µ–º HTTP –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  const app = await NestFactory.create(AppModule);

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS
  app.enableCors({
    origin: true,
    credentials: true,
  });

  // –°–æ–∑–¥–∞–µ–º –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å
  app.connectMicroservice<MicroserviceOptions>({
    transport: Transport.RMQ,
    options: {
      urls: [process.env.RABBITMQ_URL],
      queue: process.env.FILMS_QUEUE,
      queueOptions: {
        durable: false,
      },
    },
  });

  // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
  await app.startAllMicroservices();

  // –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
  const port = process.env.PORT || 3002;
  await app.listen(port);

  console.log(`Kino-db service started on port ${port}`);
}

bootstrap();

// Graceful shutdown
process.on('SIGTERM', async () => {
  console.log('üîÑ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–∫—Ä—ã–≤–∞—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  process.exit(0);
});

process.on('SIGINT', async () => {
  console.log('üîÑ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–∫—Ä—ã–≤–∞—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  process.exit(0);
});
